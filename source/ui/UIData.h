////////////////////////////////////////////////
// File:	UIData.h
//
// Author:	Liam Russell (A.K.A. BitSlapper)
//
// Copyright: 2014-2015 Liam Russell
//
// License:	GNU GENERAL PUBLIC LICENSE V3
//////////////////////////////////////////////


#ifndef _UIDATA_H_
#define _UIDATA_H_

#include <vector>
#include <string>
#include <map>

class Section;

class UIData
{
private:

	std::vector<Section*> m_vecSections;
	std::map<std::string,std::string> m_mapParams;

	bool replace(std::string& str, const std::string& from, const std::string& to);


public:

	///////////////////////////////////////////////////////////////////////////////
	//Constructor
	///////////////////////////////////////////////////////////////////////////////
	UIData();

	///////////////////////////////////////////////////////////////////////////////
	//Constructor
	///////////////////////////////////////////////////////////////////////////////
	UIData(const char* szFileName, size_t numGPUS);

	///////////////////////////////////////////////////////////////////////////////
	//Copy Constructor
	///////////////////////////////////////////////////////////////////////////////
	UIData(const UIData& data);

	///////////////////////////////////////////////////////////////////////////////
	//Assignment Operator
	///////////////////////////////////////////////////////////////////////////////
	UIData& operator=(const UIData& data);

	///////////////////////////////////////////////////////////////////////////////
	//Destructor
	///////////////////////////////////////////////////////////////////////////////
	~UIData();

	
	///////////////////////////////////////////////////////////////////////////////
	//Accessors
	///////////////////////////////////////////////////////////////////////////////
	const std::vector<Section*> GetSections()	const						{	return this->m_vecSections;		}

	///////////////////////////////////////////////////////////////////////////////
	//Mutators
	///////////////////////////////////////////////////////////////////////////////
	void SetSections(const std::vector<Section*> sections)					{	this->m_vecSections = sections;	}
	void SetParameters(const std::map<std::string,std::string> mapParams)	{	this->m_mapParams = mapParams;	}

	void SetParameter(std::string szName, std::string szData);

	std::vector<std::string> GetLines();
};

#endif